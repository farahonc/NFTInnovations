# NFTInnovations.py

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import requests

class NFTInnovations:
    def __init__(self, api_url: str):
        self.api_url = api_url
        self.data = pd.DataFrame()

    def fetch_nft_data(self, collection: str) -> dict:
        """
        Fetch data for a specific NFT collection from the API.
        """
        url = f"{self.api_url}/nft/collections/{collection}"
        response = requests.get(url)
        data = response.json()
        return data

    def fetch_transaction_data(self, collection: str) -> pd.DataFrame:
        """
        Fetch transaction data for a specific NFT collection.
        """
        url = f"{self.api_url}/nft/collections/{collection}/transactions"
        response = requests.get(url)
        transactions = response.json()['transactions']
        df = pd.DataFrame(transactions)
        self.data = df
        return df

    def analyze_transactions(self) -> pd.DataFrame:
        """
        Analyze NFT transactions.
        """
        if self.data.empty:
            print("No transaction data available. Please fetch transaction data first.")
            return pd.DataFrame()
        
        # Example analysis: Calculate transaction volume
        self.data['value'] = self.data['value'].astype(float)
        self.data['date'] = pd.to_datetime(self.data['timestamp'], unit='s')
        volume = self.data.groupby(self.data['date'].dt.date)['value'].sum().reset_index()
        volume.columns = ['Date', 'Volume']
        return volume

    def visualize_transaction_volume(self):
        """
        Visualize NFT transaction volume over time.
        """
        volume = self.analyze_transactions()
        if volume.empty:
            return

        plt.figure(figsize=(12, 6))
        sns.lineplot(data=volume, x='Date', y='Volume', marker='o')
        plt.title('NFT Transaction Volume Over Time')
        plt.xlabel('Date')
        plt.ylabel('Volume')
        plt.grid(True)
        plt.show()

    def visualize_transaction_distribution(self):
        """
        Visualize the distribution of NFT transactions.
        """
        if self.data.empty:
            print("No transaction data available. Please fetch transaction data first.")
            return

        plt.figure(figsize=(12, 6))
        sns.histplot(self.data['value'], bins=50, kde=True)
        plt.title('Distribution of NFT Transaction Values')
        plt.xlabel('Transaction Value')
        plt.ylabel('Frequency')
        plt.grid(True)
        plt.show()

# Example usage
if __name__ == "__main__":
    api_url = 'https://api.yournftprovider.com/v1'

    nft_toolkit = NFTInnovations(api_url)
    
    # Fetch NFT collection data
    collection = 'cryptopunks'
    collection_data = nft_toolkit.fetch_nft_data(collection)
    
    # Fetch and analyze transaction data
    transaction_data = nft_toolkit.fetch_transaction_data(collection)
    
    # Visualize transaction volume over time
    nft_toolkit.visualize_transaction_volume()
    
    # Visualize distribution of transaction values
    nft_toolkit.visualize_transaction_distribution()
